user  nginx;
worker_processes  auto;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    # Gzip compression for performance
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Upstream for User Service (running on port 8081)
    upstream user_service {
        server user-service:8081;
    }

    # Upstream for Task Service (running on port 8082)
    upstream task_service {
        server task-service:8082;
    }

    server {
        listen 80;
        server_name localhost;

        # Serve React frontend
        location / {
            proxy_pass http://task_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy to Task Service for specific routes
        location ~ ^/(chat/ai|chat/psychologist|trackers/.*)$ {
            proxy_pass http://task_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy to User Service for login and register routes
        location ~ ^/(login|register)$ {
            proxy_pass http://user_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Logging configuration
        access_log  /var/log/nginx/access.log;
        error_log   /var/log/nginx/error.log;
    }
}
