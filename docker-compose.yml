services:
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - user-service
      - task-service
    networks:
      - app-network


  user-service:
    build: ./user-service
    ports:
      - "8081:8081"
    networks:
      - app-network
    environment:
      DATABASE_URL: postgres://youruser:yourpassword@db:5432/yourdb

  task-service:
    build: ./task-service
    ports:
      - "8082:8082"
    networks:
      - app-network
    depends_on:
      - user-service
      - db
    environment:
      DATABASE_URL: postgres://youruser:yourpassword@db:5432/yourdb


  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - app-network

  frontend:
    build: ./frontend-service
    ports:
      - "3000:3000"
    networks:
      - app-network

  # prometheus:
  #   image: prom/prometheus:latest
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #   ports:
  #     - "9090:9090"
  #   networks:
  #     - app-network

  # grafana:
  #   image: grafana/grafana:latest
  #   ports:
  #     - "3001:3001"
  #   depends_on:
  #     - prometheus
  #   networks:
  #     - app-network
  #   environment:
  #     - GF_SECURITY_ADMIN_USER=admin
  #     - GF_SECURITY_ADMIN_PASSWORD=admin

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
